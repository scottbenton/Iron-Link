/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as GameLayoutImport } from './routes/_gameLayout'
import { Route as DefaultNavLayoutImport } from './routes/_defaultNavLayout'
import { Route as DefaultNavLayoutIndexImport } from './routes/_defaultNavLayout/index'
import { Route as DefaultNavLayoutAuthImport } from './routes/_defaultNavLayout/auth'
import { Route as DefaultNavLayoutWorldsIndexImport } from './routes/_defaultNavLayout/worlds/index'
import { Route as DefaultNavLayoutHomebrewIndexImport } from './routes/_defaultNavLayout/homebrew/index'
import { Route as DefaultNavLayoutGamesIndexImport } from './routes/_defaultNavLayout/games/index'
import { Route as DefaultNavLayoutGamesCreateImport } from './routes/_defaultNavLayout/games/create'
import { Route as GameLayoutGamesGameIdIndexImport } from './routes/_gameLayout/games/$gameId/index'
import { Route as GameLayoutGamesGameIdCreateImport } from './routes/_gameLayout/games/$gameId/create'
import { Route as DefaultNavLayoutGamesGameIdJoinImport } from './routes/_defaultNavLayout/games/$gameId/join'
import { Route as GameLayoutGamesGameIdCCharacterIdImport } from './routes/_gameLayout/games/$gameId/c/$characterId'

// Create/Update Routes

const GameLayoutRoute = GameLayoutImport.update({
  id: '/_gameLayout',
  getParentRoute: () => rootRoute,
} as any)

const DefaultNavLayoutRoute = DefaultNavLayoutImport.update({
  id: '/_defaultNavLayout',
  getParentRoute: () => rootRoute,
} as any)

const DefaultNavLayoutIndexRoute = DefaultNavLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DefaultNavLayoutRoute,
} as any).lazy(() =>
  import('./routes/_defaultNavLayout/index.lazy').then((d) => d.Route),
)

const DefaultNavLayoutAuthRoute = DefaultNavLayoutAuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => DefaultNavLayoutRoute,
} as any).lazy(() =>
  import('./routes/_defaultNavLayout/auth.lazy').then((d) => d.Route),
)

const DefaultNavLayoutWorldsIndexRoute =
  DefaultNavLayoutWorldsIndexImport.update({
    id: '/worlds/',
    path: '/worlds/',
    getParentRoute: () => DefaultNavLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_defaultNavLayout/worlds/index.lazy').then((d) => d.Route),
  )

const DefaultNavLayoutHomebrewIndexRoute =
  DefaultNavLayoutHomebrewIndexImport.update({
    id: '/homebrew/',
    path: '/homebrew/',
    getParentRoute: () => DefaultNavLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_defaultNavLayout/homebrew/index.lazy').then(
      (d) => d.Route,
    ),
  )

const DefaultNavLayoutGamesIndexRoute = DefaultNavLayoutGamesIndexImport.update(
  {
    id: '/games/',
    path: '/games/',
    getParentRoute: () => DefaultNavLayoutRoute,
  } as any,
).lazy(() =>
  import('./routes/_defaultNavLayout/games/index.lazy').then((d) => d.Route),
)

const DefaultNavLayoutGamesCreateRoute =
  DefaultNavLayoutGamesCreateImport.update({
    id: '/games/create',
    path: '/games/create',
    getParentRoute: () => DefaultNavLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_defaultNavLayout/games/create.lazy').then((d) => d.Route),
  )

const GameLayoutGamesGameIdIndexRoute = GameLayoutGamesGameIdIndexImport.update(
  {
    id: '/games/$gameId/',
    path: '/games/$gameId/',
    getParentRoute: () => GameLayoutRoute,
  } as any,
).lazy(() =>
  import('./routes/_gameLayout/games/$gameId/index.lazy').then((d) => d.Route),
)

const GameLayoutGamesGameIdCreateRoute =
  GameLayoutGamesGameIdCreateImport.update({
    id: '/games/$gameId/create',
    path: '/games/$gameId/create',
    getParentRoute: () => GameLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_gameLayout/games/$gameId/create.lazy').then(
      (d) => d.Route,
    ),
  )

const DefaultNavLayoutGamesGameIdJoinRoute =
  DefaultNavLayoutGamesGameIdJoinImport.update({
    id: '/games/$gameId/join',
    path: '/games/$gameId/join',
    getParentRoute: () => DefaultNavLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_defaultNavLayout/games/$gameId/join.lazy').then(
      (d) => d.Route,
    ),
  )

const GameLayoutGamesGameIdCCharacterIdRoute =
  GameLayoutGamesGameIdCCharacterIdImport.update({
    id: '/games/$gameId/c/$characterId',
    path: '/games/$gameId/c/$characterId',
    getParentRoute: () => GameLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_gameLayout/games/$gameId/c/$characterId.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_defaultNavLayout': {
      id: '/_defaultNavLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DefaultNavLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_gameLayout': {
      id: '/_gameLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GameLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_defaultNavLayout/auth': {
      id: '/_defaultNavLayout/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof DefaultNavLayoutAuthImport
      parentRoute: typeof DefaultNavLayoutImport
    }
    '/_defaultNavLayout/': {
      id: '/_defaultNavLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DefaultNavLayoutIndexImport
      parentRoute: typeof DefaultNavLayoutImport
    }
    '/_defaultNavLayout/games/create': {
      id: '/_defaultNavLayout/games/create'
      path: '/games/create'
      fullPath: '/games/create'
      preLoaderRoute: typeof DefaultNavLayoutGamesCreateImport
      parentRoute: typeof DefaultNavLayoutImport
    }
    '/_defaultNavLayout/games/': {
      id: '/_defaultNavLayout/games/'
      path: '/games'
      fullPath: '/games'
      preLoaderRoute: typeof DefaultNavLayoutGamesIndexImport
      parentRoute: typeof DefaultNavLayoutImport
    }
    '/_defaultNavLayout/homebrew/': {
      id: '/_defaultNavLayout/homebrew/'
      path: '/homebrew'
      fullPath: '/homebrew'
      preLoaderRoute: typeof DefaultNavLayoutHomebrewIndexImport
      parentRoute: typeof DefaultNavLayoutImport
    }
    '/_defaultNavLayout/worlds/': {
      id: '/_defaultNavLayout/worlds/'
      path: '/worlds'
      fullPath: '/worlds'
      preLoaderRoute: typeof DefaultNavLayoutWorldsIndexImport
      parentRoute: typeof DefaultNavLayoutImport
    }
    '/_defaultNavLayout/games/$gameId/join': {
      id: '/_defaultNavLayout/games/$gameId/join'
      path: '/games/$gameId/join'
      fullPath: '/games/$gameId/join'
      preLoaderRoute: typeof DefaultNavLayoutGamesGameIdJoinImport
      parentRoute: typeof DefaultNavLayoutImport
    }
    '/_gameLayout/games/$gameId/create': {
      id: '/_gameLayout/games/$gameId/create'
      path: '/games/$gameId/create'
      fullPath: '/games/$gameId/create'
      preLoaderRoute: typeof GameLayoutGamesGameIdCreateImport
      parentRoute: typeof GameLayoutImport
    }
    '/_gameLayout/games/$gameId/': {
      id: '/_gameLayout/games/$gameId/'
      path: '/games/$gameId'
      fullPath: '/games/$gameId'
      preLoaderRoute: typeof GameLayoutGamesGameIdIndexImport
      parentRoute: typeof GameLayoutImport
    }
    '/_gameLayout/games/$gameId/c/$characterId': {
      id: '/_gameLayout/games/$gameId/c/$characterId'
      path: '/games/$gameId/c/$characterId'
      fullPath: '/games/$gameId/c/$characterId'
      preLoaderRoute: typeof GameLayoutGamesGameIdCCharacterIdImport
      parentRoute: typeof GameLayoutImport
    }
  }
}

// Create and export the route tree

interface DefaultNavLayoutRouteChildren {
  DefaultNavLayoutAuthRoute: typeof DefaultNavLayoutAuthRoute
  DefaultNavLayoutIndexRoute: typeof DefaultNavLayoutIndexRoute
  DefaultNavLayoutGamesCreateRoute: typeof DefaultNavLayoutGamesCreateRoute
  DefaultNavLayoutGamesIndexRoute: typeof DefaultNavLayoutGamesIndexRoute
  DefaultNavLayoutHomebrewIndexRoute: typeof DefaultNavLayoutHomebrewIndexRoute
  DefaultNavLayoutWorldsIndexRoute: typeof DefaultNavLayoutWorldsIndexRoute
  DefaultNavLayoutGamesGameIdJoinRoute: typeof DefaultNavLayoutGamesGameIdJoinRoute
}

const DefaultNavLayoutRouteChildren: DefaultNavLayoutRouteChildren = {
  DefaultNavLayoutAuthRoute: DefaultNavLayoutAuthRoute,
  DefaultNavLayoutIndexRoute: DefaultNavLayoutIndexRoute,
  DefaultNavLayoutGamesCreateRoute: DefaultNavLayoutGamesCreateRoute,
  DefaultNavLayoutGamesIndexRoute: DefaultNavLayoutGamesIndexRoute,
  DefaultNavLayoutHomebrewIndexRoute: DefaultNavLayoutHomebrewIndexRoute,
  DefaultNavLayoutWorldsIndexRoute: DefaultNavLayoutWorldsIndexRoute,
  DefaultNavLayoutGamesGameIdJoinRoute: DefaultNavLayoutGamesGameIdJoinRoute,
}

const DefaultNavLayoutRouteWithChildren =
  DefaultNavLayoutRoute._addFileChildren(DefaultNavLayoutRouteChildren)

interface GameLayoutRouteChildren {
  GameLayoutGamesGameIdCreateRoute: typeof GameLayoutGamesGameIdCreateRoute
  GameLayoutGamesGameIdIndexRoute: typeof GameLayoutGamesGameIdIndexRoute
  GameLayoutGamesGameIdCCharacterIdRoute: typeof GameLayoutGamesGameIdCCharacterIdRoute
}

const GameLayoutRouteChildren: GameLayoutRouteChildren = {
  GameLayoutGamesGameIdCreateRoute: GameLayoutGamesGameIdCreateRoute,
  GameLayoutGamesGameIdIndexRoute: GameLayoutGamesGameIdIndexRoute,
  GameLayoutGamesGameIdCCharacterIdRoute:
    GameLayoutGamesGameIdCCharacterIdRoute,
}

const GameLayoutRouteWithChildren = GameLayoutRoute._addFileChildren(
  GameLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof GameLayoutRouteWithChildren
  '/auth': typeof DefaultNavLayoutAuthRoute
  '/': typeof DefaultNavLayoutIndexRoute
  '/games/create': typeof DefaultNavLayoutGamesCreateRoute
  '/games': typeof DefaultNavLayoutGamesIndexRoute
  '/homebrew': typeof DefaultNavLayoutHomebrewIndexRoute
  '/worlds': typeof DefaultNavLayoutWorldsIndexRoute
  '/games/$gameId/join': typeof DefaultNavLayoutGamesGameIdJoinRoute
  '/games/$gameId/create': typeof GameLayoutGamesGameIdCreateRoute
  '/games/$gameId': typeof GameLayoutGamesGameIdIndexRoute
  '/games/$gameId/c/$characterId': typeof GameLayoutGamesGameIdCCharacterIdRoute
}

export interface FileRoutesByTo {
  '': typeof GameLayoutRouteWithChildren
  '/auth': typeof DefaultNavLayoutAuthRoute
  '/': typeof DefaultNavLayoutIndexRoute
  '/games/create': typeof DefaultNavLayoutGamesCreateRoute
  '/games': typeof DefaultNavLayoutGamesIndexRoute
  '/homebrew': typeof DefaultNavLayoutHomebrewIndexRoute
  '/worlds': typeof DefaultNavLayoutWorldsIndexRoute
  '/games/$gameId/join': typeof DefaultNavLayoutGamesGameIdJoinRoute
  '/games/$gameId/create': typeof GameLayoutGamesGameIdCreateRoute
  '/games/$gameId': typeof GameLayoutGamesGameIdIndexRoute
  '/games/$gameId/c/$characterId': typeof GameLayoutGamesGameIdCCharacterIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_defaultNavLayout': typeof DefaultNavLayoutRouteWithChildren
  '/_gameLayout': typeof GameLayoutRouteWithChildren
  '/_defaultNavLayout/auth': typeof DefaultNavLayoutAuthRoute
  '/_defaultNavLayout/': typeof DefaultNavLayoutIndexRoute
  '/_defaultNavLayout/games/create': typeof DefaultNavLayoutGamesCreateRoute
  '/_defaultNavLayout/games/': typeof DefaultNavLayoutGamesIndexRoute
  '/_defaultNavLayout/homebrew/': typeof DefaultNavLayoutHomebrewIndexRoute
  '/_defaultNavLayout/worlds/': typeof DefaultNavLayoutWorldsIndexRoute
  '/_defaultNavLayout/games/$gameId/join': typeof DefaultNavLayoutGamesGameIdJoinRoute
  '/_gameLayout/games/$gameId/create': typeof GameLayoutGamesGameIdCreateRoute
  '/_gameLayout/games/$gameId/': typeof GameLayoutGamesGameIdIndexRoute
  '/_gameLayout/games/$gameId/c/$characterId': typeof GameLayoutGamesGameIdCCharacterIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/auth'
    | '/'
    | '/games/create'
    | '/games'
    | '/homebrew'
    | '/worlds'
    | '/games/$gameId/join'
    | '/games/$gameId/create'
    | '/games/$gameId'
    | '/games/$gameId/c/$characterId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/auth'
    | '/'
    | '/games/create'
    | '/games'
    | '/homebrew'
    | '/worlds'
    | '/games/$gameId/join'
    | '/games/$gameId/create'
    | '/games/$gameId'
    | '/games/$gameId/c/$characterId'
  id:
    | '__root__'
    | '/_defaultNavLayout'
    | '/_gameLayout'
    | '/_defaultNavLayout/auth'
    | '/_defaultNavLayout/'
    | '/_defaultNavLayout/games/create'
    | '/_defaultNavLayout/games/'
    | '/_defaultNavLayout/homebrew/'
    | '/_defaultNavLayout/worlds/'
    | '/_defaultNavLayout/games/$gameId/join'
    | '/_gameLayout/games/$gameId/create'
    | '/_gameLayout/games/$gameId/'
    | '/_gameLayout/games/$gameId/c/$characterId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DefaultNavLayoutRoute: typeof DefaultNavLayoutRouteWithChildren
  GameLayoutRoute: typeof GameLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  DefaultNavLayoutRoute: DefaultNavLayoutRouteWithChildren,
  GameLayoutRoute: GameLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_defaultNavLayout",
        "/_gameLayout"
      ]
    },
    "/_defaultNavLayout": {
      "filePath": "_defaultNavLayout.tsx",
      "children": [
        "/_defaultNavLayout/auth",
        "/_defaultNavLayout/",
        "/_defaultNavLayout/games/create",
        "/_defaultNavLayout/games/",
        "/_defaultNavLayout/homebrew/",
        "/_defaultNavLayout/worlds/",
        "/_defaultNavLayout/games/$gameId/join"
      ]
    },
    "/_gameLayout": {
      "filePath": "_gameLayout.tsx",
      "children": [
        "/_gameLayout/games/$gameId/create",
        "/_gameLayout/games/$gameId/",
        "/_gameLayout/games/$gameId/c/$characterId"
      ]
    },
    "/_defaultNavLayout/auth": {
      "filePath": "_defaultNavLayout/auth.ts",
      "parent": "/_defaultNavLayout"
    },
    "/_defaultNavLayout/": {
      "filePath": "_defaultNavLayout/index.ts",
      "parent": "/_defaultNavLayout"
    },
    "/_defaultNavLayout/games/create": {
      "filePath": "_defaultNavLayout/games/create.ts",
      "parent": "/_defaultNavLayout"
    },
    "/_defaultNavLayout/games/": {
      "filePath": "_defaultNavLayout/games/index.ts",
      "parent": "/_defaultNavLayout"
    },
    "/_defaultNavLayout/homebrew/": {
      "filePath": "_defaultNavLayout/homebrew/index.ts",
      "parent": "/_defaultNavLayout"
    },
    "/_defaultNavLayout/worlds/": {
      "filePath": "_defaultNavLayout/worlds/index.ts",
      "parent": "/_defaultNavLayout"
    },
    "/_defaultNavLayout/games/$gameId/join": {
      "filePath": "_defaultNavLayout/games/$gameId/join.ts",
      "parent": "/_defaultNavLayout"
    },
    "/_gameLayout/games/$gameId/create": {
      "filePath": "_gameLayout/games/$gameId/create.ts",
      "parent": "/_gameLayout"
    },
    "/_gameLayout/games/$gameId/": {
      "filePath": "_gameLayout/games/$gameId/index.ts",
      "parent": "/_gameLayout"
    },
    "/_gameLayout/games/$gameId/c/$characterId": {
      "filePath": "_gameLayout/games/$gameId/c/$characterId.ts",
      "parent": "/_gameLayout"
    }
  }
}
ROUTE_MANIFEST_END */
